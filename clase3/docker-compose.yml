version: "3.9"

services:
  nginx:
    image: nginx:alpine
    container_name: clase3_nginx
    ports:
      - "8080:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
    networks:
      - app-network
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: clase3_postgres
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: exampledb
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  adminer:
    image: adminer:latest
    container_name: clase3_adminer
    ports:
      - "8081:8080"
    networks:
      - app-network
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
